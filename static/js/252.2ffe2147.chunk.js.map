{"version":3,"file":"static/js/252.2ffe2147.chunk.js","mappings":"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","sources":["components/services/api.js","components/TweetsItem/TweetsItem.styled.js","components/TweetsItem/TweetsItem.js","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.js","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://644294cc33997d3ef9143f2a.mockapi.io/api/';\n\nexport async function getAllTweets() {\n  try {\n    const users = await axios.get(`users`);\n    return users;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTweets = async (page = 1) => {\n  try {\n    const users = await axios.get(`/users?page=${page}&limit=3`);\n    return users;\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport async function putFollow(id, value) {\n  try {\n    const user = await axios.put(`users/${id}`, { followers: value });\n    return user;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\nimport bcgImage from '../../images/bcg-image.png';\nexport const Item = styled.li`\n  width: 380px;\n  height: 460px;\n  margin: 5px;\n  background-image: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\nexport const Div = styled.div`\n  height: 460px;\n  position: relative;\n  background-image: url('${bcgImage}');\n  background-repeat: no-repeat;\n  background-position: 36px 24px;\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 214px;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n    width: 100%;\n    height: 8px;\n    background-size: contain;\n    display: block;\n  }\n`;\nexport const Logo = styled.img`\n  margin-top: 20px;\n  margin-left: 20px;\n  width: 76px;\n  height: 22px;\n`;\nexport const ImageDiv = styled.div`\n  height: 214px;\n  position: relative;\n  z-index: 2;\n  ::after {\n    content: '';\n    width: 80px;\n    height: 80px;\n    display: block;\n    z-index: 1;\n    top: 72px;\n    position: relative;\n    background: #ebd8ff;\n    border-radius: 100%;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\nexport const ImageAvatar = styled.img`\n  border-radius: 100%;\n  position: relative;\n  display: block;\n  z-index: 3;\n  width: 62px;\n  height: 62px;\n  top: 143px;\n  left: 10px;\n  border: 3px solid #52319f;\n`;\nexport const UserInfoDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const UserInfoList = styled.ul`\n  margin: 26px 5px 10px 5px;\n`;\nexport const P = styled.p`\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 16px;\n`;\nexport const Button = styled.button`\n  background-color: ${props => (props.following ? '#5CD3A8' : '#EBD8FF')};\n  width: 196px;\n  height: 50px;\n  font-weight: 600;\n  font-size: 18px;\n  color: #373737;\n  text-transform: uppercase;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  border-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: ${props => (props.following ? '#EBD8FF' : '#5CD3A8')};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport logo from '../../images/logo.png';\nimport * as api from '../services/api';\nimport {\n  Button,\n  Div,\n  ImageAvatar,\n  ImageDiv,\n  Item,\n  Logo,\n  P,\n  UserInfoDiv,\n  UserInfoList,\n} from './TweetsItem.styled';\nexport const TweetsItem = ({ user }) => {\n  let { avatar, tweets, followers, id } = user;\n\n  const [following, setFollowing] = useState(false);\n  const [updateFollowers, setUpdateFollowers] = useState(followers);\n\n  const onClickFollow = async () => {\n    const putFollow = async followers => {\n      try {\n        await api.putFollow(id, followers);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!following) {\n      setUpdateFollowers(prevState => prevState + 1);\n      setFollowing(true);\n    } else {\n      setUpdateFollowers(prevState => prevState - 1);\n      setFollowing(false);\n    }\n    await putFollow(followers);\n  };\n\n  useEffect(() => {\n    const savedFollow = localStorage.getItem(`follow${id}`);\n    if (savedFollow !== null) {\n      const parsedFollow = JSON.parse(savedFollow);\n      setFollowing(parsedFollow.following);\n      setUpdateFollowers(parsedFollow.updateFollowers);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    const followArray = { id, following, updateFollowers };\n    localStorage.setItem(`follow${id}`, JSON.stringify(followArray));\n  }, [id, following, updateFollowers]);\n\n  const formatFollowers = updateFollowers.toLocaleString('en-US');\n  return (\n    <Item>\n      <Div>\n        <Logo src={logo} alt=\"logo\" />\n        <UserInfoDiv>\n          {' '}\n          <ImageDiv>\n            <ImageAvatar src={avatar} width=\"100px\" alt=\"user-avatar\" />\n          </ImageDiv>\n          <UserInfoList>\n            <li>\n              <P>{tweets} tweets</P>\n            </li>\n            <li>\n              <P>{formatFollowers} followers</P>\n            </li>\n          </UserInfoList>\n          <Button type=\"button\" following={following} onClick={onClickFollow}>\n            {following ? 'Following' : 'Follow'}\n          </Button>\n        </UserInfoDiv>\n      </Div>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  margin: 10px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n","import { TweetsItem } from 'components/TweetsItem/TweetsItem';\nimport { List } from './TweetsList.styled';\nexport const TweetsList = ({ users }) => {\n  return (\n    <>\n      {\n        <List>\n          {users.map(user => (\n            <TweetsItem key={user.id} user={user} />\n          ))}\n        </List>\n      }\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  margin: 20px;\n  color: #373737;\n  display: flex;\n  align-items: center;\n  border-radius: 10px;\n  height: 40px;\n  width: 120px;\n  padding: 10px;\n  background-color: #5cd3a8;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.1);\n    transition-duration: 500ms;\n  }\n`;\n\nexport const P = styled.p`\n  text-transform: uppercase;\n  margin-left: 10px;\n`;\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const Button = styled.button`\n  margin: 10px;\n  color: #373737;\n  border-radius: 10px;\n  height: 40px;\n  width: 200px;\n  padding: 10px;\n  background-color: #5cd3a8;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-transform: uppercase;\n  border: transparent;\n  :hover {\n    background-color: #4c2b9a;\n    color: #ebd8ff;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport * as api from '../../components/services/api';\nimport { TweetsList } from 'components/TweetsList/TweetsList';\nimport { Button, Div, P, StyledLink } from './Tweets.styled';\n\nconst Tweets = () => {\n  const [notEmpty, setNotEmpty] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(2);\n  const [pages, setPages] = useState(1);\n  const [btnShow, setBtnShow] = useState(false);\n\n  useEffect(() => {\n    const getAllTweets = async () => {\n      try {\n        const { data } = await api.getAllTweets();\n        setPages(data.length / 3);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllTweets();\n  }, []);\n\n  const onClickLoadMore = async () => {\n    try {\n      setPage(prevState => prevState + 1);\n      const { data } = await api.getTweets(page);\n      setUsers(prevState => [...prevState, ...data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const getTweets = async () => {\n      try {\n        const { data } = await api.getTweets();\n        setUsers(data);\n        setBtnShow(true);\n        setNotEmpty(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTweets();\n  }, []);\n\n  return (\n    <section>\n      <StyledLink to=\"/\">\n        <HiArrowLeft />\n        <P>Back</P>\n      </StyledLink>\n      {notEmpty && <TweetsList users={users} />}\n      <Div>\n        {' '}\n        {pages >= page && btnShow && (\n          <Button onClick={onClickLoadMore}>Load More</Button>\n        )}\n      </Div>\n    </section>\n  );\n};\n\nexport default Tweets;\n"],"names":["getAllTweets","axios","users","console","error","getTweets","page","log","message","putFollow","id","value","followers","user","Item","styled","Div","bcgImage","Logo","ImageDiv","ImageAvatar","UserInfoDiv","UserInfoList","P","Button","props","following","TweetsItem","avatar","tweets","useState","setFollowing","updateFollowers","setUpdateFollowers","onClickFollow","api","prevState","useEffect","savedFollow","localStorage","getItem","parsedFollow","JSON","parse","followArray","setItem","stringify","formatFollowers","toLocaleString","src","alt","width","type","onClick","List","TweetsList","map","StyledLink","NavLink","notEmpty","setNotEmpty","setUsers","setPage","pages","setPages","btnShow","setBtnShow","data","length","onClickLoadMore","to"],"sourceRoot":""}